{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 1. Sto je testiranje?\par
\tab Testiranje softwarea je proces prilikom kojega se aplikacija ili software provjeravaju na greske, usporeni rad, lose performanse i da li ispunjavaju zathjeve klijenata i buducih korisnika. Testiranje softwarea se moze izvrsavati putem manualnog testiranja ili kroz automatizirane testove. Cilj testiranja je da se tokom cijelog procesa razvoja softwarea osigura najvisi moguci kvalitet i korisnost softwarea. \par
2. Sto predstavlja unit test?\par
\tab Unit test predstavlja proces testiranja prilikom kojega testiramo odredjenu funkcionalnost ili modul softwarea izolirano od drugih. Ova vrsta testiranja se provodi u ranim fazama razvoja softwarea, prije nego sto se integrira vise modula u jedan veci sistem. \par
3. Koje su razlike izmedju manualnog i automatskog testiranja?\par
\tab Manualno testiranje je proces koji obavlja tester rucno i prilikom kojeg se software testira na bugove kroz razne vrste testiranja. Automatsko testiranje je proces prilikom kojeg se software testira putem bota ili skripte koju je tester napisao za potrebe testiranja i koja prolazi kroz sve navedene fukncionalnosti u skladu s potrebama testa. \par
\tab Razlika izmedju ove dvije vrste testiranja je to sto se automatsko testiranje izvrsava u vecem obimu za manje vremena, preciznije je u slucaju cestih ili ponovnih provjera istih funkcija. Manualno testiranje je podlozno ljudskoj gresci, ali je u nekim slucajevima pogodnije za neke metode testiranja. \par
4. Koje su prednosti automatskog testiranja?\par
\tab Automatsko testiranje se vrsi putem skripte napisane u programskom jeziku, te se obavlja brze, efikasnije i pouzdanije u slucaju kada je potrebno izvrsiti jedan test case vise puta. Skripte za testiranje je moguce ponovno iskoristiti za druge testove kada se testiraju iste ili slicne funkcionalnosti. \par
5. Sto predstavlja regression testing? \par
\tab Regression testing je proces u kojem se jedan ili vise modula softwarea testira nakon sto je implemetirana nova funkcionalnost ili je neki bug popravljen nakon sto je otkriven. \par
6. Sto je smoke testing i kada se koristi? \par
\tab Smoke testing je vrsta regression tetsinga prilikom koje se testiraju samo moduli ili funkcionalnosti softwarea koji su popravljeni ili modificirani poslije prethodnig testova i provjera. Koristi se kada je potrebno testirati modul ili funkcionalnost u kracem roku. \par
7. Navedite primjer smoke i regression testinga. \par
\tab Prilikom razvoja webstranice kompanije koja prodaje odredjene artikle online, dijelovi stranice kao sto su lista artikala, kategorije, korpica i checkout (stranica za potrvdu placanja) se razvijaju odvojeno u pocetnim fazama razvoja stranice. Kada bi se primjenjivao regression testing, poslije odredjene popravke ili modifikacije stranice, testeri bi provjerili sve module stranice bez obzira na to da li su modificirani ili ne. Kada bi primjenjivali smoke testing, samo moduli koji su bili modificirani ce biti testirani. Dakle, ako bi postojao problem s funkcionalnosti korpe, u regression tetsingu bi nakon popravke provjerili sve module stranice ukljucujuci korpu, dok bi u smoke testingu testirali samo korpu. \par
8. Sto je acceptance criteria?\par
\tab Acceptance criteria predstavlja kriterije koje je potrebno ispuniti da bi software bio upotrebljiv i da bi bio pusten u promet za krajnje korisnike. Ovi kriteriji su krajnji cilj koji software treba da ispuni i na osnovu kojih se izvrsavaju testovi tog softwarea tijekom procesa razvoja. \par
9. Sto predstavljaju user requirements? \par
\tab User requirements su zahtjevi koje je postavio klijent koji narucuje software i koji predstavljaju krajnju ideju i cilj softwarea koji se razvija. Ovo su zahtjevi koje software mora ispunjavati nakon sto je pusten u promet i na osnovu kojih klijent utvrdjuje da li je software razvijen na zadovoljavajuci nacin. \par
10. Sto predstavlja white box testiranje? \par
\tab White box testiranje je proces testiranja prilikom kojeg je potrebno poznavati unutrasnju strukturu i kod u kojem je software napisan. Prilikom ove vrste testiranja, najcesce se provjeravaju greske u samom kodu, funkcionalnosti i moguci nedostatci u sigurnosti koda. \par
11. Definirajte black box testiranje. \par
\tab Black box testiranje je testiranje pilikom kojega nije potrebno poznavati unutrasnju strukturu koda i tester ne provjerava kod. Prilikom black box testiranja, fokus je na testiranju funkcionalnosti softwarea bez promjene ili provjere unutrasnje strukture koda. \par
12. Sto predstavlja integration testing?\par
\tab Integration testing je proces testiranja koji se provodi nakon sto je nekoliko jedinica ili modula softwarea implementirano u jednu cjelinu. Ova vrsta testiranja se provodi s ciljem provjere bugova ili drugih gresaka koje se mogu pojaviti kada se odredjeni moduli implementiraju u jednu cjelinu i pocinju interakciju jedni s drugim. \par
13. Sto predstavlja end-to-end testing?\par
\tab End-to-end testing predstavlja testiranje citavog softwarea od pocetka do kraja, odnosno svih funkcionalnosti softwarea tokom jednog testa. Ovaj test se obavlja pred kraj procesa razvoja softwarea. \par
14. Sto je 'funkcija' unutar Pythona i kojom kljucnom rijeci se definira? \par
\tab Funkcija unutar programskog jezika Python je alat uz pomoc kojega je moguce definirati odredjeni skup podataka koje je potrebno pozvati unutar koda nekoliko puta. Funkcija sluzi kao 'kratica' ili olaksanje, svrha joj je da u jednom trenutku pozove veci broj podataka koji su definirani unutar funkcije na samom pocetku. Kljucna rijec kojom se definira funkcija je \b def\b0 .\par
15. Sto su liste i tupleovi? Koje su razlike?\par
\tab Liste i tupleovi predstavljaju vrstu podatka u programskom jeziku Python. Unutar listi i tupleova je moguce unijeti vise raznih vrsta podataka i prikazivati ih izvrsavanjem koda. Razlika izmedju listi i tupleova je u tome da su liste promjenjive i moguce ih je indeksirati, te su organizirane (ordered); tupleovi su organizirani i moguce ih je indeksirati, medjutim oni su nepromjenjivi. \par
16. Sto predstavlja slicing u Pythonu? \par
\tab Slicing u programskom jeziku Python predstavlja proces izdvajanja ili prikazivanja podataka koji su izvuceni iz vece skupine podataka koji mogu biti indeksirani (lista, tuple, dictionary). Slicing se izvrsava pomocu indeksa i moguce je uraditi slicing jednog ili rangea podataka. \par
17. Sto je funkcionalno testiranje? \par
\tab Funkcionalno testiranje je proces testiranja softwarea prilikom kojeg se provjeravaju funkcionalnosti jednog softwarea u skladu sa zahtjevima klijenata koji narucuju software. \par
18. Sto predstavlja nefunkcionalno testiranje?\par
\tab Nefunkcionalno testiranje predstavlja proces testiranja nefunkcionalnih aspekata jednog softwarea: performanse, stabilnost i sigurnost softwarea. \par
19. Koji je najbitniji korak SDLC-a?\par
\tab Najbitniji korak SDLC-a (Software Development Life Cycle) je testiranje softwarea. \par
20. Sto predstavlja SDLC? Navedite korake koji ga sacinjavaju. \par
\tab SDLC je kratica za Software Life Development Cycle. SDLC definira cijeli proces razvoja jednog softwarea od zacetka ideje do finalnog pustanja prometa i odrzavanja softwarea. U procesu SDLC-a sudjeluje nekoliko timova unutar jedne kompanije i ukljuceni su strucnjaci iz velikog broja oblasti. Faze SDLC-a su: 1. planiranje, 2. analiza, 3. dizajn, 4. razvoj, 5. testiranje, 6. implementacija i 7. odrzavanje. \par
21. Sto oznacava class unutar Pythona? Definirajte pojam i objasnite upotrebu. \par
\tab Class ili klasa unutar programskog jezika Python predstavlja jedan od najvaznijih dijelova objektno orijentisanog programiranja (OOP). Klasa je blueprint odnosno nacrt na osnovu kojega je moguce kreirati objekte unutar Pythona, koji su sastavni dio OOP-a i na koje se mogu primjenjivati funkcije, metode i koji su promjenjivi. Klasa je nacrt koji se definira kljucnom rijeci \b class \b0 i u koju se unose varijable buducih objekata koji ce se instancirati nad klasom. Klase se koriste za definiranje i olaksano upravljanje vecom kolicinom objekata unutar koda. \par
22. Sto predstavlja 'objekat' unutar Pythona?\par
\tab Objekat u programskom jeziku Python je jedinica koja se kreira odnosno instancira nad klasom, pri cemu klasa sluzi kao nacrt objekta koji ce biti instanciran. U objektno orijetisanom programiranju (OOP), objektima se upravlja i moguce je koristiti metode nad njima, dok im klasa sluzi kao nacrt i definira im osnovne varijable. \par
23. Sto je user acceptance testing (UAT)?\par
\tab UAT predstavlja proces testiranja prilikom kojega se software testira na krajnje zahtjeve klijenta koji je narucio software, te sam klijent izvrsava proces testiranja. Obicno se izvrsava u prostorijama firme koja je software razvila, prije nego se odobri finalno pustanje u promet. \par
24. Sto je beta testing? \par
\tab Beta testing je proces testiranja prilikom kojega se software testira od strane manje grupe buducih korisnika softwarea. Za potrebe beta testa, software se instalira na uradjaje korisnika i prikupljaju se podaci o performansama i mogucim bugovima koji nisu promijeceni za vrijeme razvoja i teatiranja softwarea. \par
25. Sto je alfa testing? \par
\tab Alfa testing je proces testiranja prilikom kojega se software testira nakon sto je zavrsen proces razvoja softwarea. Ovo testiranje izvrsavaju predstavnici klijenta koji je narucio izradu softwarea i izvrsavaju ga u prostorijama firme koja je razvila software. \par
26. Kada je najbolje poceti sa fazom testiranja? \par
\tab Testiranje je softwarea je najbolje poceti na samom pocetku planiranja softwarea, odnosno sto je prije moguce. \par
27. Sto je API? \par
\tab API (Application Programming Interface) je set programskih kodova koji predstavlja komunikaciju izmedju dva softwarea ili servera koji sadrze baze podataka, te koji ima svoj vlastiti interface. API se koristi za pozivanje odredjenih podataka od strane jednog softwarea prema drugom softwareu, nakon cega drugi software povlaci podatke koji su zatrazeni i salje ih prvom softwareu i prikazuje putem predodredjenog interfacea. API se koristi za razne vrste upravljanja podacima izmedju razlicitih softwarea i servera. Prednosti API-ja su ogranicen pristup bazama podataka odredjenih servera, sto smanjuje mogucnost ugrozavanja sigurnosti baza podataka. \par
28. Kako testiramo API?\par
\tab API je moguce testirati putem aplikacije Postman, gdje se testira da li odredjeni API povlaci podatke koji su zatrazeni od strane nekog softwarea. Kod API-ja je nuzno testirati i mogucnost unosenja varijabli u API, te da li sistem prepoznaje gresku u varijabli. \par
29. Sto je agile testing i zasto je bitno? \par
\tab Agile testing je proces testiranja prilikom kojega se software testira iz perspektive buduceg korisnika ili kupca. Bitno je izvrsiti ovu vrstu testiranja da bi se otkrile greske, bugovi ili umanjene performanse softwarea. \par
30. Sto bi predstavljao test case? \par
\tab Test case predstavlja scenario ili slijed koraka koje tester mora izvrsiti da bi pokrenuo, odnosno provjerio odredjenu funkcionalnost ili izazvao gresku, te dokumentirao istu. \par
}
 